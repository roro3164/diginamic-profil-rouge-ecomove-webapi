trigger:
  branches:
    include:
      - main
      - feature/ci-cd-setup

pool:
  vmImage: 'ubuntu-latest'

# Variables pour le build et les configurations de déploiement
variables:
  buildConfiguration: 'Release'
  DB_URL: $(DB_URL)      # URL de la base de données, injectée depuis les variables Azure DevOps
  DB_USER: $(DB_USER)    # Nom d'utilisateur de la base de données
  DB_PASS: $(DB_PASS)    # Mot de passe de la base de données
  DEPLOY_SERVER: "ubuntu@13.60.97.190"  # Adresse IP publique du serveur AWS
  DEPLOY_PATH: "/home/ubuntu/deployment" # Chemin où déployer l'application

steps:
  # Installer le SDK .NET
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x' # Version de .NET SDK que vous utilisez
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # Restauration des dépendances
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  # Compilation
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  # Exécution des tests
  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  # Étape de déploiement
  - script: |
      echo "Déploiement en cours sur le serveur AWS..."
      scp -o StrictHostKeyChecking=no -r ./output $(DEPLOY_SERVER):$(DEPLOY_PATH)
      ssh -o StrictHostKeyChecking=no $(DEPLOY_SERVER) "cd $(DEPLOY_PATH) && dotnet run --configuration $(buildConfiguration)"
    displayName: 'Déploiement sur serveur de test/production'
