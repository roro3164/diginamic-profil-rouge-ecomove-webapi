trigger:
  branches:
    include:
      - main
      - feature/ci-cd-setup

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  DEPLOY_SERVER: "ubuntu@13.60.97.190"  # Remplacez par l'adresse IP de votre serveur AWS
  DEPLOY_PATH: "/home/ubuntu/app"       # Répertoire de déploiement sur le serveur

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'test'
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  # Étape de déploiement
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.ArtifactStagingDirectory)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/app'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/app'
      ArtifactName: 'app'

  - task: SSH@0
    inputs:
      sshEndpoint: 'AWS-SSH-Connection'
      runOptions: 'inline'
      inline: |
        mkdir -p $(DEPLOY_PATH)
        sudo apt-get update
        sudo apt-get install -y unzip
        sudo unzip -o app.zip -d $(DEPLOY_PATH)
        cd $(DEPLOY_PATH)
        dotnet myApp.dll  # Remplacez par le nom de votre fichier exécutable
    displayName: 'Déploiement sur AWS'
